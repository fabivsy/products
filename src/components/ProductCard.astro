---
interface Props {
  id: string;
  name: string;
  description: string;
  url: string;
  pricing: {
    type: 'free' | 'paid' | 'freemium';
    startingAt?: string;
  };
  tags: string[];
  showDetails?: boolean;
}

const { id, name, description, url, pricing, tags, showDetails = false } = Astro.props;

const getPricingBadgeColor = (type: 'free' | 'paid' | 'freemium') => {
  switch (type) {
    case 'free': return 'bg-green-100 text-green-800';
    case 'paid': return 'bg-purple-100 text-purple-800';
    case 'freemium': return 'bg-blue-100 text-blue-800';
  }
};
---

<div class="bg-white p-6 rounded-lg shadow-md hover:shadow-lg transition-shadow">
  <div class="flex justify-between items-start mb-4">
    <h3 class="text-xl font-bold text-gray-900">{name}</h3>
    <span class={`px-2 py-1 text-sm rounded-full ${getPricingBadgeColor(pricing.type)}`}>
      {pricing.type === 'paid' ? pricing.startingAt : pricing.type}
    </span>
  </div>
  
  <p class="text-gray-600 mb-4">{description}</p>
  
  <div class="flex flex-wrap gap-2 mb-4">
    {tags.map(tag => (
      <span class="px-2 py-1 bg-gray-100 text-gray-600 text-sm rounded-full">
        {tag}
      </span>
    ))}
  </div>
  
  <div class="flex gap-3">
    {showDetails && (
      <a
        href={`/product/${id}`}
        class="inline-block bg-gray-100 text-gray-700 px-4 py-2 rounded-md hover:bg-gray-200 transition-colors"
      >
        View Details
      </a>
    )}
    <a
      href={url}
      target="_blank"
      rel="noopener noreferrer"
      class="inline-block bg-indigo-600 text-white px-4 py-2 rounded-md hover:bg-indigo-700 transition-colors"
    >
      Visit Website
    </a>
  </div>
</div>